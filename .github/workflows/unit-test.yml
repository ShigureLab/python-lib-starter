name: Unit Test

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
  workflow_dispatch:

jobs:
  unit-test:
    env:
      UV_CACHE_DIR: /tmp/.uv-cache
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        architecture: ['x64']
    name: unittest - Python ${{ matrix.python-version }} on ${{ matrix.architecture }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}

      - name: Install just
        uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore uv cache
        uses: actions/cache@v4
        with:
          path: /tmp/.uv-cache
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}
            uv-${{ runner.os }}

      - name: Install dependencies
        run: |
          just ci-install

      - name: unit test
        run: |
          just ci-test

      - name: Minimize uv cache
        run: uv cache prune --ci
